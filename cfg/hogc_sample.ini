# Debug mode. Default is true
# true or false
#debug = true

# logFile is where errors are writen. Default is /var/log/hogc/errors.log
#logFile = /var/log/hogc/errors.log

# exit if no frame
#exitIfNoFrame = true


#
## Camera/stream options

# It's a number and it correspond to /dev/videoX where X is an integer. You can use -1 for automatique selection
# By default, it automatically search the first video it find.
# Useless if camStream is define.
#camNumber = 0

# You can define a stream cam as the following example if you use mjpg_streamer:
# camStream = http://192.168.1.2:8080/?action=stream.
# If camStream is define, camNumber is useless.
# Don't use '' or "" !
#camStream = http://192.168.1.2:8080/?action=stream

# Path where hogc can find a picture for search human
# You should change sleepTime and do not put 0
#imageFile = test.jpg

## end of camera/stream options
#


## if you use a camera (not a stream) you can define width and height. There is
## some bug with opencv driver
# width of video
#videoWidth = 640

# height of video
#videoHeight = 480

# Number of per second. The higher framerate, the more cpu is used
# 0 to have default framerate
# Actually, there is some bug with framerate and opencv. it can crash (coredump)
# the program
#fps = 0

# If fps doesn't work, you can use sleepTime in millisecond but it's not
# recommanded. 0 to disable it.
# You should use sleepTime in order to use "static" image (see imageFile)
#sleepTime = 0

# The larger the image size and the higher the CPU consumption. So you can
# resize each frame
#ratioResizeWidth = 0.5
#ratioResizeHeight = 0.5

# Path to record image when human was detected.
# Don't use '' or "" !
# Blank path record images in same folder that exec
#recordPath = /tmp

# Quality of jpeg when it's recording to hdd/sdd
#jpgQuality = 75

hitThreshold = 0
winStrideX = 0
winStrideY = 0
paddingX = 0
paddingY = 0
scale = 1.05
finalThreshold = 2.0
useMeanshiftGrouping = false
